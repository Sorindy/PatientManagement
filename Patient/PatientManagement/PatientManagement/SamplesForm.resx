<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picboxNew.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAACF
        tgAAhbYBqbnzzAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABNNSURBVHhe7d1b
        r6Z3WcfxeuaZJ74DE0PiC1D2akIp0HZmYFrotNPdTGc6LSgbNY1CLEW2CVJ2grY0lcIR0WiCeKAhHGjQ
        xIgmJEZAJQao7+L2Hgzkp/5FZvVaM9ezrs/B52S18zzJldzP79vpWjM3bdsGAAyz/CIAcLItvwgAnGzL
        LwIAJ9tNP/3se18EAPzQT6wG86S5GgAbAPBDP7kazJNGAADAfycAAGAgAQAAAwkAABhIAADAQAIAAAYS
        AAAwkAAAgIEEAAAMJAAAYCABAAADCQAAGEgAAMBAAgAABhIAADCQAACAgQQAAAwkAABgIAEAAAMJAAAY
        SAAAwEACAAAGEgAAMJAAAICBBAAADCQAAGAgAQAAAwkAABhIAADAQAIAAAYSAAAwkAAAgIEEAAAMJAAA
        YCABAAADCQAAGEgAAMBAAgAABhIAADCQAACAgQQAAAwkAABgIAEAAAMJAAAYSAAAwEACAAAGEgAAMJAA
        AICBBAAADCQAAGAgAQAAAwkAABhIAADAQAIAAAYSAAAwkAAAgIEEAAAMJAAAYCABAAADCQAAGEgAAMBA
        AgAABhIAADCQAACAgQQAAAwkAABgIAEAAAMJAAAYSAAAwEACAAAGEgAAMJAAAICBBAAADCQAAGAgAQAA
        AwkAABhIAEzzM7/5K1/9+Vef/g4Ac/3Cq059ewIBEH72HY/+1X6UDQBOOgEQBAAAUwiAIAAAmEIABAEA
        wBQCIAgAAKYQAEEAADCFAAgCAIApBEAQAABMIQCCAABgCgEQBAAAUwiAIAAAmEIABAEAwBQCIAgAAKYQ
        AEEAADCFAAgCAIApBEAQAABMIQCCAABgCgEQBAAAUwiAIAAAmEIABAEAwBQCIAgAAKYQAEEAADCFAAgC
        AIApBEAQAABMIQCCAABgCgEQBAAAUwiAIAAAmEIABAEAwBQCIAgAAKYQAEEAADCFAAgCAIApBEAQAABM
        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
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timerpnlButton.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
</root>